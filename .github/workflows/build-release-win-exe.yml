name: Build and Release Windows EXE
permissions:
  contents: write
  packages: write

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get_version
        shell: pwsh
        run: |
          $content = Get-Content version_info.txt -Raw
          if ($content -match "ProductVersion', '([\d\.]+)'") { $version = $Matches[1] }
          "version=$version" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding UTF8 -Append

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build EXE
        run: |
          pyinstaller --clean -F -n mcpcli --version-file version_info.txt mcp_chat_cli.py

      - name: Create ZIP
        shell: pwsh
        run: |
          Compress-Archive -Path "dist\\mcpcli.exe","README.md","mcp.json.sample","mcp.json.template" -DestinationPath azuremcpcli-windows-${{ steps.get_version.outputs.version }}.zip

      - name: Create GitHub Release (official CLI)
        shell: bash
        run: |
          gh release create v${{ steps.get_version.outputs.version }} \
            azuremcpcli-windows-${{ steps.get_version.outputs.version }}.zip \
            --title "Release ${{ steps.get_version.outputs.version }}" \
            --notes "Automated Windows build with version ${{ steps.get_version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}